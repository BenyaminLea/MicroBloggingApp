{"version":3,"sources":["context.js","components/AddTweetForm.js","components/Tweet.js","components/TweetsList.js","components/User.js","firebase.js","components/SignLogIn.js","App.js","reportWebVitals.js","index.js"],"names":["MyContext","React","createContext","AddTweetForm","Consumer","context","className","onSubmit","event","preventDefault","date","Date","newTweet","content","tweet","dateR","toISOString","setTweet","handleOnTweetChange","type","name","id","required","placeholder","value","onChange","target","length","setDisabled","IsDisabled","disabled","Tweet","props","state","userName","this","Component","TweetsList","tweets","map","User","setState","username","onChangeUser","handleSubmit","handleUserNameChange","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","SignLogIn","emailLogIn","passwordLogIn","emailSignIn","userNameSignIn","passwordSignIn","redirect","email","password","signInWithEmailAndPassword","then","catch","error","errorCode","code","errorMessage","message","alert","createUserWithEmailAndPassword","user","userObj","photoURL","uid","firestore","collection","add","provider","GoogleAuthProvider","signInWithPopup","result","displayName","to","handleLogIn","emailLogInChange","passwordLogInChange","handleSignIn","emailSignInChange","passwordSignInChange","userNameSignInChange","onClick","logInWithGoogle","App","isLoading","bool","loadTweets","currentUser","where","get","querySnapshot","forEach","doc","console","log","data","onSnapshot","listTweets","push","sort","a","b","newUser","Provider","isLoggedIn","path","signOut","handleOnUserChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65bc25a9.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const MyContext = React.createContext({});\n","import React from \"react\";\nimport \"./AddTweetForm.css\";\nimport { MyContext } from \"../context\";\n\nconst AddTweetForm = () => {\n  return (\n    <MyContext.Consumer>\n      {(context) => {\n        return (\n          <form\n            className=\"formTweet\"\n            onSubmit={(event) => {\n              event.preventDefault();\n              let date = new Date();\n              const newTweet = {\n                content: context.tweet,\n                dateR: date.toISOString(),\n                date: date,\n              };\n              context.setTweet(newTweet);\n              context.handleOnTweetChange(\"\");\n            }}\n          >\n            <div>\n              <textarea\n                type=\"text\"\n                name=\"tweet\"\n                id=\"tweet\"\n                className=\"textareaTweet\"\n                required\n                placeholder=\"What you have in mind...\"\n                value={context.tweet}\n                onChange={(event) => {\n                  context.handleOnTweetChange(event.target.value);\n                  if (event.target.value.length > 140) {\n                    context.setDisabled(true);\n                  } else {\n                    context.setDisabled(false);\n                  }\n                }}\n              />\n            </div>\n            <div className=\"SubmitPart\">\n              {context.IsDisabled && (\n                <div className=\"MessageError\">\n                  The tweet can't contain more than 140 chars.\n                </div>\n              )}\n              <button\n                className=\"buttonTweet\"\n                type=\"submit\"\n                disabled={context.IsDisabled}\n              >\n                Tweet\n              </button>\n            </div>\n          </form>\n        );\n      }}\n    </MyContext.Consumer>\n  );\n};\n\nexport default AddTweetForm;\n","import React from \"react\";\nimport \"./Tweet.css\";\n\nclass Tweet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: this.props.content,\n      date: this.props.date,\n      userName: this.props.userName,\n    };\n  }\n\n  render() {\n    return (\n      <li className=\"tweet\">\n        <div className=\"top\">\n          <div>{this.state.userName}</div>\n          <div>{this.state.date}</div>\n        </div>\n        <div className=\"bottom\">{this.state.content}</div>\n      </li>\n    );\n  }\n}\n\nexport default Tweet;\n","import React from \"react\";\nimport Tweet from \"./Tweet\";\nimport \"./TweetsList.css\";\nimport { MyContext } from \"../context\";\n\nconst TweetsList = () => {\n  return (\n    <MyContext.Consumer>\n      {(context) => {\n        return (\n          <ul className=\"tweets\">\n            {context.tweets.map((tweet) => (\n              <Tweet\n                key={tweet.date}\n                content={tweet.content}\n                date={tweet.dateR}\n                userName={tweet.userName}\n              />\n            ))}\n          </ul>\n        );\n      }}\n    </MyContext.Consumer>\n  );\n};\n\nexport default TweetsList;\n","import React from \"react\";\nimport \"./User.css\";\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ userName: this.props.username });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let name = this.state.userName;\n    this.props.onChangeUser(name);\n  }\n\n  handleUserNameChange(event) {\n    this.setState({ userName: event.target.value });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Profile</h1>\n        <p>User Name</p>\n        <form\n          className=\"formUser\"\n          onSubmit={(event) => this.handleSubmit(event)}\n        >\n          <div>\n            <textarea\n              className=\"textareaUser\"\n              type=\"text\"\n              name=\"userName\"\n              id=\"userName\"\n              required\n              value={this.state.userName}\n              onChange={(event) => this.handleUserNameChange(event)}\n            />\n          </div>\n          <button className=\"buttonUser\" type=\"submit\">\n            Save\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default User;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyChgDlQ6sy5w4lizsBFKPIC02_ZPFXA15c\",\n  authDomain: \"microbloggingapp-f3af3.firebaseapp.com\",\n  projectId: \"microbloggingapp-f3af3\",\n  storageBucket: \"microbloggingapp-f3af3.appspot.com\",\n  messagingSenderId: \"741625542230\",\n  appId: \"1:741625542230:web:3f1e6efbe9b77a4351adf7\",\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from \"react\";\nimport \"./SignLogIn.css\";\nimport firebase from \"../firebase\";\nimport { Redirect } from \"react-router\";\n\nconst auth = firebase.auth();\n\nclass SignLogIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailLogIn: \"\",\n      passwordLogIn: \"\",\n      emailSignIn: \"\",\n      userNameSignIn: \"\",\n      passwordSignIn: \"\",\n      redirect: false,\n    };\n  }\n  emailLogInChange(event) {\n    this.setState({ emailLogIn: event.target.value });\n  }\n  passwordLogInChange(event) {\n    this.setState({ passwordLogIn: event.target.value });\n  }\n  emailSignInChange(event) {\n    this.setState({ emailSignIn: event.target.value });\n  }\n  passwordSignInChange(event) {\n    this.setState({ passwordSignIn: event.target.value });\n  }\n  userNameSignInChange(event) {\n    this.setState({ userNameSignIn: event.target.value });\n  }\n\n  handleLogIn(event) {\n    event.preventDefault();\n    const email = this.state.emailLogIn;\n    const password = this.state.passwordLogIn;\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({\n          emailLogIn: \"\",\n          passwordLogIn: \"\",\n          redirect: true,\n        });\n      })\n      .catch(function (error) {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (errorCode === \"auth/wrong-password\") {\n          alert(\"Wrong password.\");\n        } else {\n          alert(errorMessage);\n        }\n      });\n  }\n\n  handleSignIn(event) {\n    event.preventDefault();\n    const email = this.state.emailSignIn;\n    const password = this.state.passwordSignIn;\n    const username = this.state.userNameSignIn;\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        const userObj = {\n          email: email,\n          username: username,\n          photoURL: \"\",\n          uid: user.user.uid,\n        };\n        firebase.firestore().collection(\"users\").add(userObj);\n        this.setState({\n          emailSignIn: \"\",\n          passwordSignIn: \"\",\n          redirect: true,\n        });\n      })\n      .catch(function (error) {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (errorCode === \"auth/weak-password\") {\n          alert(\"The password is too weak.\");\n        } else {\n          alert(errorMessage);\n        }\n      });\n  }\n\n  logInWithGoogle() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(function (result) {\n        // The firebase.User instance:\n        var user = result.user;\n        const userObj = {\n          email: user.email,\n          username: user.displayName,\n          photoURL: user.photoURL,\n          uid: user.uid,\n        };\n        firebase.firestore().collection(\"users\").add(userObj);\n      })\n      .then(() => {\n        this.setState({\n          redirect: true,\n        });\n      });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/tweets\" />;\n    }\n\n    return (\n      <div>\n        <form className=\"LogIn\" onSubmit={(event) => this.handleLogIn(event)}>\n          <h1>Log In</h1>\n          <input\n            placeholder=\"Email Address\"\n            value={this.state.emailLogIn}\n            onChange={(event) => this.emailLogInChange(event)}\n          ></input>\n          <input\n            placeholder=\"PassWord\"\n            value={this.state.passwordLogIn}\n            onChange={(event) => this.passwordLogInChange(event)}\n          ></input>\n          <button type=\"submit\">Log In</button>\n        </form>\n        <form className=\"SignIn\" onSubmit={(event) => this.handleSignIn(event)}>\n          <h1>Doesn't have an account ? Sign up now !</h1>\n          <input\n            placeholder=\"Email Address\"\n            value={this.state.emailSignIn}\n            onChange={(event) => this.emailSignInChange(event)}\n          ></input>\n          <input\n            placeholder=\"PassWord\"\n            value={this.state.passwordSignIn}\n            onChange={(event) => this.passwordSignInChange(event)}\n          ></input>\n          <input\n            placeholder=\"UserName\"\n            value={this.state.userNameSignIn}\n            required\n            onChange={(event) => this.userNameSignInChange(event)}\n          ></input>\n          <button type=\"submit\">Sign In</button>\n        </form>\n        <button\n          onClick={() => {\n            this.logInWithGoogle();\n          }}\n        >\n          Or sign in with Google\n        </button>\n      </div>\n    );\n  }\n}\nexport default SignLogIn;\n","import React from \"react\";\nimport AddTweetForm from \"./components/AddTweetForm\";\nimport TweetsList from \"./components/TweetsList\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport User from \"./components/User\";\nimport { MyContext } from \"./context\";\nimport firebase from \"./firebase\";\nimport SignLogIn from \"./components/SignLogIn\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      isLoading: false,\n      error: \"\",\n      userName: \"\",\n      tweet: \"\",\n      IsDisabled: false,\n      setDisabled: (bool) => this.setState({ IsDisabled: bool }),\n      handleOnTweetChange: (tweet) => this.setState({ tweet: tweet }),\n      setTweet: (newTweet) => {\n        newTweet.userName = this.state.userName;\n        this.setState({ isLoading: true, error: \"\" });\n        firebase.firestore().collection(\"tweets\").add(newTweet);\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadTweets();\n    var user = firebase.auth().currentUser;\n    if (user) {\n      firebase\n        .firestore()\n        .collection(\"users\")\n        .where(\"uid\", \"==\", user.uid)\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.forEach((doc) => {\n            console.log(doc.data());\n            this.setState({ userName: doc.data().username });\n          });\n        });\n    }\n  }\n\n  async loadTweets() {\n    firebase\n      .firestore()\n      .collection(\"tweets\")\n      .onSnapshot((querySnapshot) => {\n        var listTweets = [];\n        querySnapshot.forEach((doc) => {\n          listTweets.push(doc.data());\n        });\n        listTweets.sort((a, b) => {\n          return b.date - a.date;\n        });\n        this.setState({ tweets: listTweets, isLoading: false });\n      });\n  }\n\n  handleOnUserChange(newUser) {\n    this.setState({ userName: newUser });\n  }\n\n  isLoggedIn() {\n    var user = firebase.auth().currentUser;\n    if (user) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <MyContext.Provider value={this.state}>\n        <Router>\n          {!this.isLoggedIn() && <Redirect to=\"/\" />}\n          <Switch>\n            <Route path=\"/user\">\n              <nav>\n                <ul className=\"navbar\">\n                  <li className=\"navLi\">\n                    <Link to=\"/tweets\">Tweets</Link>\n                  </li>\n                  <li className=\"navLi\">\n                    <Link to=\"/user\">User</Link>\n                  </li>\n                  <li className=\"navLi\">\n                    <Link\n                      to=\"/\"\n                      onClick={() => {\n                        firebase\n                          .auth()\n                          .signOut()\n                          .then(() => console.log(\"out\"));\n                      }}\n                    >\n                      LogOut\n                    </Link>\n                  </li>\n                </ul>\n              </nav>\n              <User\n                username={this.state.userName}\n                onChangeUser={(newUser) => this.handleOnUserChange(newUser)}\n              />\n            </Route>\n            <Route path=\"/tweets\">\n              <nav>\n                <ul className=\"navbar\">\n                  <li className=\"navLi\">\n                    <Link to=\"/tweets\">Tweets</Link>\n                  </li>\n                  <li className=\"navLi\">\n                    <Link to=\"/user\">User</Link>\n                  </li>\n                  <li className=\"navLi\">\n                    <Link\n                      to=\"/\"\n                      onClick={() => {\n                        firebase\n                          .auth()\n                          .signOut()\n                          .then(() => console.log(\"out\"));\n                      }}\n                    >\n                      LogOut\n                    </Link>\n                  </li>\n                </ul>\n              </nav>\n              {this.state.isLoading && <p className=\"loading\">Loading...</p>}\n              {!this.state.isLoading && (\n                <div>\n                  <AddTweetForm />\n                  {this.state.error && <div>{this.state.error}</div>}\n                  <TweetsList />\n                </div>\n              )}\n            </Route>\n            <Route path=\"/\">\n              <SignLogIn />\n            </Route>\n          </Switch>\n        </Router>\n      </MyContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}