{"version":3,"sources":["context.js","components/AddTweetForm.js","components/Tweet.js","components/TweetsList.js","lib/api.js","components/User.js","App.js","reportWebVitals.js","index.js"],"names":["MyContext","React","createContext","AddTweetForm","Consumer","context","className","onSubmit","event","preventDefault","dateR","Date","toISOString","newTweet","content","tweet","date","setTweet","handleOnTweetChange","type","name","id","required","placeholder","value","onChange","target","length","setDisabled","IsDisabled","disabled","Tweet","props","state","userName","this","Component","TweetsList","tweets","map","baseUrl","getTweets","axios","get","User","localforage","getItem","then","setState","onChangeUser","handleSubmit","handleUserNameChange","App","isLoading","error","bool","post","loadTweets","catch","err","loadTweets1","setInterval","response","data","index","i","newTweets","slice","prevState","newUser","setItem","Provider","to","path","handleOnUserChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17c1cde7.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const MyContext = React.createContext({});\n","import React from \"react\";\nimport \"./AddTweetForm.css\";\nimport { MyContext } from \"../context\";\n\nconst AddTweetForm = () => {\n  return (\n    <MyContext.Consumer>\n      {(context) => {\n        return (\n          <form\n            className=\"formTweet\"\n            onSubmit={(event) => {\n              event.preventDefault();\n              let dateR = new Date().toISOString();\n              const newTweet = {\n                content: context.tweet,\n                date: dateR,\n              };\n              context.setTweet(newTweet);\n              context.handleOnTweetChange(\"\");\n            }}\n          >\n            <div>\n              <textarea\n                type=\"text\"\n                name=\"tweet\"\n                id=\"tweet\"\n                className=\"textareaTweet\"\n                required\n                placeholder=\"What you have in mind...\"\n                value={context.tweet}\n                onChange={(event) => {\n                  context.handleOnTweetChange(event.target.value);\n                  if (event.target.value.length > 140) {\n                    context.setDisabled(true);\n                  } else {\n                    context.setDisabled(false);\n                  }\n                }}\n              />\n            </div>\n            <div className=\"SubmitPart\">\n              {context.IsDisabled && (\n                <div className=\"MessageError\">\n                  The tweet can't contain more than 140 chars.\n                </div>\n              )}\n              <button\n                className=\"buttonTweet\"\n                type=\"submit\"\n                disabled={context.IsDisabled}\n              >\n                Tweet\n              </button>\n            </div>\n          </form>\n        );\n      }}\n    </MyContext.Consumer>\n  );\n};\n\nexport default AddTweetForm;\n","import React from \"react\";\nimport \"./Tweet.css\";\n\nclass Tweet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: this.props.content,\n      date: this.props.date,\n      userName: this.props.userName,\n    };\n  }\n\n  render() {\n    return (\n      <li className=\"tweet\">\n        <div className=\"top\">\n          <div>{this.state.userName}</div>\n          <div>{this.state.date}</div>\n        </div>\n        <div className=\"bottom\">{this.state.content}</div>\n      </li>\n    );\n  }\n}\n\nexport default Tweet;\n","import React from \"react\";\nimport Tweet from \"./Tweet\";\nimport \"./TweetsList.css\";\nimport { MyContext } from \"../context\";\n\nconst TweetsList = () => {\n  return (\n    <MyContext.Consumer>\n      {(context) => {\n        return (\n          <ul className=\"tweets\">\n            {context.tweets.map((tweet) => (\n              <Tweet\n                key={tweet.id}\n                content={tweet.content}\n                date={tweet.date}\n                userName={tweet.userName}\n              />\n            ))}\n          </ul>\n        );\n      }}\n    </MyContext.Consumer>\n  );\n};\n\nexport default TweetsList;\n","import axios from \"axios\";\n\nconst baseUrl =\n  \"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com\";\n\nexport function getTweets() {\n  return axios.get(`${baseUrl}/tweet`);\n}\n\nexport function createTweet(tweet) {\n  return axios.post(`${baseUrl}/tweet`, tweet);\n}\n","import React from \"react\";\nimport \"./User.css\";\nimport localforage from \"localforage\";\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"yonathan\",\n    };\n  }\n\n  componentDidMount() {\n    localforage.getItem(\"name\").then((value) => {\n      if (value) {\n        this.setState({ userName: value });\n      }\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let name = this.state.userName;\n    this.props.onChangeUser(name);\n  }\n\n  handleUserNameChange(event) {\n    this.setState({ userName: event.target.value });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Profile</h1>\n        <p>User Name</p>\n        <form\n          className=\"formUser\"\n          onSubmit={(event) => this.handleSubmit(event)}\n        >\n          <div>\n            <textarea\n              className=\"textareaUser\"\n              type=\"text\"\n              name=\"userName\"\n              id=\"userName\"\n              required\n              value={this.state.userName}\n              onChange={(event) => this.handleUserNameChange(event)}\n            />\n          </div>\n          <button className=\"buttonUser\" type=\"submit\">\n            Save\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default User;\n","import React from \"react\";\nimport AddTweetForm from \"./components/AddTweetForm\";\nimport TweetsList from \"./components/TweetsList\";\nimport { createTweet, getTweets } from \"./lib/api\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport User from \"./components/User\";\nimport localforage from \"localforage\";\nimport { MyContext } from \"./context\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      isLoading: false,\n      error: \"\",\n      userName: \"yonathan\",\n      tweet: \"\",\n      IsDisabled: false,\n      setDisabled: (bool) => this.setState({ IsDisabled: bool }),\n      handleOnTweetChange: (tweet) => this.setState({ tweet: tweet }),\n      setTweet: (newTweet) => {\n        newTweet.userName = this.state.userName;\n        this.setState({ isLoading: true, error: \"\" });\n        createTweet(newTweet)\n          .then(() => this.loadTweets())\n          .catch((err) => this.setState({ isLoading: false, error: err }));\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadTweets1();\n    localforage.getItem(\"name\").then((value) => {\n      if (value) {\n        this.setState({ userName: value });\n      }\n    });\n    setInterval(() => {\n      this.loadTweets();\n    }, 5000);\n  }\n\n  async loadTweets1() {\n    const response = await getTweets();\n    this.setState({\n      tweets: response.data.tweets,\n      isLoading: false,\n    });\n  }\n\n  async loadTweets() {\n    const response = await getTweets();\n    let index = 0;\n    for (var i = 0; i < response.data.tweets.length; i++) {\n      if (response.data.tweets[i].id === this.state.tweets[0].id) {\n        index = i;\n        break;\n      }\n    }\n    const newTweets = response.data.tweets.slice(0, index);\n    this.setState((prevState) => ({\n      tweets: [...newTweets, ...prevState.tweets],\n      isLoading: false,\n    }));\n  }\n\n  handleOnUserChange(newUser) {\n    localforage.setItem(\"name\", newUser);\n    this.setState({ userName: newUser });\n  }\n\n  render() {\n    return (\n      <MyContext.Provider value={this.state}>\n        <Router>\n          <div className=\"main\">\n            <nav>\n              <ul className=\"navbar\">\n                <li className=\"navLi\">\n                  <Link to=\"/\">Home</Link>\n                </li>\n                <li className=\"navLi\">\n                  <Link to=\"/user\">User</Link>\n                </li>\n              </ul>\n            </nav>\n            <div>\n              <Switch>\n                <Route path=\"/user\">\n                  <User\n                    onChangeUser={(newUser) => this.handleOnUserChange(newUser)}\n                  />\n                </Route>\n                <Route path=\"/\">\n                  {this.state.isLoading && (\n                    <p className=\"loading\">Loading...</p>\n                  )}\n                  {!this.state.isLoading && (\n                    <div>\n                      <AddTweetForm />\n                      {this.state.error && <div>{this.state.error}</div>}\n                      <TweetsList />\n                    </div>\n                  )}\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </MyContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}