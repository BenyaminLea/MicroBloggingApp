{"version":3,"sources":["context.js","components/AddTweetForm.js","firebase.js","components/Tweet.js","components/TweetsList.js","components/User.js","components/SignLogIn.js","App.js","reportWebVitals.js","index.js"],"names":["MyContext","React","createContext","AddTweetForm","Consumer","context","className","onSubmit","event","preventDefault","date","Date","newTweet","content","tweet","dateR","toISOString","setTweet","handleOnTweetChange","type","name","id","required","placeholder","value","onChange","target","length","setDisabled","IsDisabled","disabled","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Tweet","props","state","userName","firestore","collection","doc","this","get","then","setState","data","username","Component","TweetsList","fetchMoreData","items","tweets","hasMore","setTimeout","index","concat","slice","dataLength","next","loader","endMessage","style","textAlign","map","User","user","auth","currentUser","uid","onChangeUser","storageRef","storage","ref","firstFile","files","put","handleSubmit","handleUserNameChange","accept","capture","uploadImage","SignLogIn","emailLogIn","passwordLogIn","emailSignIn","userNameSignIn","passwordSignIn","redirect","email","password","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","alert","createUserWithEmailAndPassword","userObj","photoURL","set","provider","GoogleAuthProvider","signInWithPopup","result","displayName","to","handleLogIn","emailLogInChange","passwordLogInChange","handleSignIn","emailSignInChange","passwordSignInChange","userNameSignInChange","onClick","logInWithGoogle","App","isLoading","bool","add","loadTweets","onSnapshot","querySnapshot","listTweets","forEach","push","sort","a","b","userDocRef","runTransaction","transaction","update","Provider","isLoggedIn","path","signOut","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf0e2664.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const MyContext = React.createContext({});\n","import React from \"react\";\nimport \"./AddTweetForm.css\";\nimport { MyContext } from \"../context\";\n\nconst AddTweetForm = () => {\n  return (\n    <MyContext.Consumer>\n      {(context) => {\n        return (\n          <form\n            className=\"formTweet\"\n            onSubmit={(event) => {\n              event.preventDefault();\n              let date = new Date();\n              const newTweet = {\n                content: context.tweet,\n                dateR: date.toISOString(),\n                date: date,\n              };\n              context.setTweet(newTweet);\n              context.handleOnTweetChange(\"\");\n            }}\n          >\n            <div>\n              <textarea\n                type=\"text\"\n                name=\"tweet\"\n                id=\"tweet\"\n                className=\"textareaTweet\"\n                required\n                placeholder=\"What you have in mind...\"\n                value={context.tweet}\n                onChange={(event) => {\n                  context.handleOnTweetChange(event.target.value);\n                  if (event.target.value.length > 140) {\n                    context.setDisabled(true);\n                  } else {\n                    context.setDisabled(false);\n                  }\n                }}\n              />\n            </div>\n            <div className=\"SubmitPart\">\n              {context.IsDisabled && (\n                <div className=\"MessageError\">\n                  The tweet can't contain more than 140 chars.\n                </div>\n              )}\n              <button\n                className=\"buttonTweet\"\n                type=\"submit\"\n                disabled={context.IsDisabled}\n              >\n                Tweet\n              </button>\n            </div>\n          </form>\n        );\n      }}\n    </MyContext.Consumer>\n  );\n};\n\nexport default AddTweetForm;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyChgDlQ6sy5w4lizsBFKPIC02_ZPFXA15c\",\n  authDomain: \"microbloggingapp-f3af3.firebaseapp.com\",\n  projectId: \"microbloggingapp-f3af3\",\n  storageBucket: \"microbloggingapp-f3af3.appspot.com\",\n  messagingSenderId: \"741625542230\",\n  appId: \"1:741625542230:web:3f1e6efbe9b77a4351adf7\",\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from \"react\";\nimport \"./Tweet.css\";\nimport firebase from \"../firebase\";\n\nclass Tweet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: this.props.content,\n      date: this.props.date,\n      userName: this.props.userName,\n    };\n  }\n  componentDidMount() {\n    var docRef = firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(this.props.userName);\n    docRef.get().then((doc) => {\n      this.setState({ userName: doc.data().username });\n    });\n  }\n\n  render() {\n    return (\n      <li className=\"tweet\">\n        <div className=\"top\">\n          <div>{this.state.userName}</div>\n          <div>{this.state.date}</div>\n        </div>\n        <div className=\"bottom\">{this.state.content}</div>\n      </li>\n    );\n  }\n}\n\nexport default Tweet;\n","import React from \"react\";\nimport Tweet from \"./Tweet\";\nimport \"./TweetsList.css\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass TweetsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: this.props.tweets,\n      items: this.props.tweets.slice(0, 10),\n      hasMore: true,\n      index: 10,\n    };\n  }\n\n  fetchMoreData = () => {\n    if (this.state.items.length >= this.state.tweets.length) {\n      this.setState({ hasMore: false });\n      return;\n    }\n    setTimeout(() => {\n      if (this.state.index + 10 > this.state.tweets.length) {\n        this.setState(() => ({\n          items: this.state.items.concat(\n            this.state.tweets.slice(this.state.index, this.state.tweets.length)\n          ),\n          index: this.state.index + 10,\n        }));\n      } else {\n        this.setState(() => ({\n          items: this.state.items.concat(\n            this.state.tweets.slice(this.state.index, this.state.index + 10)\n          ),\n          index: this.state.index + 10,\n        }));\n      }\n    }, 1000);\n  };\n\n  render() {\n    return (\n      <InfiniteScroll\n        dataLength={this.state.items.length}\n        next={this.fetchMoreData}\n        hasMore={this.state.hasMore}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        <ul className=\"tweets\">\n          {this.state.items.map((tweet) => (\n            <Tweet\n              key={tweet.date}\n              content={tweet.content}\n              date={tweet.dateR}\n              userName={tweet.userName}\n            />\n          ))}\n        </ul>\n      </InfiniteScroll>\n    );\n  }\n}\n\nexport default TweetsList;\n","import React from \"react\";\nimport \"./User.css\";\nimport firebase from \"../firebase\";\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n    };\n  }\n\n  componentDidMount() {\n    var user = firebase.auth().currentUser;\n    var docRef = firebase.firestore().collection(\"users\").doc(user.uid);\n    docRef.get().then((doc) => {\n      this.setState({ userName: doc.data().username });\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let name = this.state.userName;\n    this.props.onChangeUser(name);\n  }\n\n  handleUserNameChange(event) {\n    this.setState({ userName: event.target.value });\n  }\n\n  uploadImage(event) {\n    var user = firebase.auth().currentUser;\n    let storageRef = firebase.storage().ref(`photos/${user.uid}`);\n    let firstFile = event.target.files[0];\n    storageRef.put(firstFile);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Profile</h1>\n        <p>User Name</p>\n        <form\n          className=\"formUser\"\n          onSubmit={(event) => this.handleSubmit(event)}\n        >\n          <div>\n            <textarea\n              className=\"textareaUser\"\n              type=\"text\"\n              name=\"userName\"\n              id=\"userName\"\n              required\n              value={this.state.userName}\n              onChange={(event) => this.handleUserNameChange(event)}\n            />\n          </div>\n          <button className=\"buttonUser\" type=\"submit\">\n            Save\n          </button>\n        </form>\n        <div>\n          <p>Upload Profile Picture</p>\n        </div>\n        <div>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            capture=\"camera\"\n            id=\"cameraInput\"\n            onChange={(event) => {\n              this.uploadImage(event);\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default User;\n","import React from \"react\";\nimport \"./SignLogIn.css\";\nimport firebase from \"../firebase\";\nimport { Redirect } from \"react-router\";\n\nconst auth = firebase.auth();\n\nclass SignLogIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailLogIn: \"\",\n      passwordLogIn: \"\",\n      emailSignIn: \"\",\n      userNameSignIn: \"\",\n      passwordSignIn: \"\",\n      redirect: false,\n    };\n  }\n  emailLogInChange(event) {\n    this.setState({ emailLogIn: event.target.value });\n  }\n  passwordLogInChange(event) {\n    this.setState({ passwordLogIn: event.target.value });\n  }\n  emailSignInChange(event) {\n    this.setState({ emailSignIn: event.target.value });\n  }\n  passwordSignInChange(event) {\n    this.setState({ passwordSignIn: event.target.value });\n  }\n  userNameSignInChange(event) {\n    this.setState({ userNameSignIn: event.target.value });\n  }\n\n  handleLogIn(event) {\n    event.preventDefault();\n    const email = this.state.emailLogIn;\n    const password = this.state.passwordLogIn;\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({\n          emailLogIn: \"\",\n          passwordLogIn: \"\",\n          redirect: true,\n        });\n      })\n      .catch(function (error) {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (errorCode === \"auth/wrong-password\") {\n          alert(\"Wrong password.\");\n        } else {\n          alert(errorMessage);\n        }\n      });\n  }\n\n  handleSignIn(event) {\n    event.preventDefault();\n    const email = this.state.emailSignIn;\n    const password = this.state.passwordSignIn;\n    const username = this.state.userNameSignIn;\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        const userObj = {\n          email: email,\n          username: username,\n          photoURL: \"\",\n        };\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .doc(user.user.uid)\n          .set(userObj);\n        this.setState({\n          emailSignIn: \"\",\n          passwordSignIn: \"\",\n          redirect: true,\n        });\n      })\n      .catch(function (error) {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (errorCode === \"auth/weak-password\") {\n          alert(\"The password is too weak.\");\n        } else {\n          alert(errorMessage);\n        }\n      });\n  }\n\n  logInWithGoogle() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(function (result) {\n        // The firebase.User instance:\n        var user = result.user;\n        const userObj = {\n          email: user.email,\n          username: user.displayName,\n          photoURL: user.photoURL,\n        };\n        firebase.firestore().collection(\"users\").doc(user.uid).set(userObj);\n      })\n      .then(() => {\n        this.setState({\n          redirect: true,\n        });\n      });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/tweets\" />;\n    }\n\n    return (\n      <div>\n        <form className=\"LogIn\" onSubmit={(event) => this.handleLogIn(event)}>\n          <h1>Log In</h1>\n          <input\n            placeholder=\"Email Address\"\n            value={this.state.emailLogIn}\n            onChange={(event) => this.emailLogInChange(event)}\n          ></input>\n          <input\n            type=\"password\"\n            placeholder=\"PassWord\"\n            value={this.state.passwordLogIn}\n            onChange={(event) => this.passwordLogInChange(event)}\n          ></input>\n          <button type=\"submit\">Log In</button>\n        </form>\n        <form className=\"SignIn\" onSubmit={(event) => this.handleSignIn(event)}>\n          <h1>Doesn't have an account ? Sign up now !</h1>\n          <input\n            placeholder=\"Email Address\"\n            value={this.state.emailSignIn}\n            onChange={(event) => this.emailSignInChange(event)}\n          ></input>\n          <input\n            type=\"password\"\n            placeholder=\"PassWord\"\n            value={this.state.passwordSignIn}\n            onChange={(event) => this.passwordSignInChange(event)}\n          ></input>\n          <input\n            placeholder=\"UserName\"\n            value={this.state.userNameSignIn}\n            required\n            onChange={(event) => this.userNameSignInChange(event)}\n          ></input>\n          <button type=\"submit\">Sign In</button>\n        </form>\n        <button\n          onClick={() => {\n            this.logInWithGoogle();\n          }}\n        >\n          Or sign in with Google\n        </button>\n      </div>\n    );\n  }\n}\nexport default SignLogIn;\n","import React from \"react\";\nimport AddTweetForm from \"./components/AddTweetForm\";\nimport TweetsList from \"./components/TweetsList\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport User from \"./components/User\";\nimport { MyContext } from \"./context\";\nimport firebase from \"./firebase\";\nimport SignLogIn from \"./components/SignLogIn\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      isLoading: false,\n      error: \"\",\n      userName: \"\",\n      tweet: \"\",\n      IsDisabled: false,\n      setDisabled: (bool) => this.setState({ IsDisabled: bool }),\n      handleOnTweetChange: (tweet) => this.setState({ tweet: tweet }),\n      setTweet: (newTweet) => {\n        newTweet.userName = firebase.auth().currentUser.uid;\n        this.setState({ isLoading: true, error: \"\" });\n        firebase.firestore().collection(\"tweets\").add(newTweet);\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadTweets();\n  }\n\n  async loadTweets() {\n    firebase\n      .firestore()\n      .collection(\"tweets\")\n      .onSnapshot((querySnapshot) => {\n        var listTweets = [];\n        querySnapshot.forEach((doc) => {\n          listTweets.push(doc.data());\n        });\n        listTweets.sort((a, b) => {\n          return b.date - a.date;\n        });\n        this.setState({ tweets: listTweets, isLoading: false });\n      });\n  }\n\n  isLoggedIn() {\n    var user = firebase.auth().currentUser;\n    if (user) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  onChangeUser(name) {\n    var user = firebase.auth().currentUser;\n    var userDocRef = firebase.firestore().collection(\"users\").doc(user.uid);\n    return firebase.firestore().runTransaction(function (transaction) {\n      return transaction.get(userDocRef).then(function () {\n        transaction.update(userDocRef, { username: name });\n      });\n    });\n  }\n\n  render() {\n    return (\n      <MyContext.Provider value={this.state}>\n        <Router>\n          {!this.isLoggedIn() && <Redirect to=\"/\" />}\n          <Switch>\n            <Route path=\"/tweets\">\n              <nav>\n                <ul className=\"navbar\">\n                  <li className=\"navLi\">\n                    <Link to=\"/tweets\">Tweets</Link>\n                  </li>\n                  <li className=\"navLi\">\n                    <Link to=\"/user\">User</Link>\n                  </li>\n                  <li className=\"navLi\">\n                    <Link\n                      to=\"/\"\n                      onClick={() => {\n                        firebase.auth().signOut();\n                      }}\n                    >\n                      LogOut\n                    </Link>\n                  </li>\n                </ul>\n              </nav>\n              {this.state.isLoading && <p className=\"loading\">Loading...</p>}\n              {!this.state.isLoading && (\n                <div>\n                  <AddTweetForm />\n                  {this.state.error && <div>{this.state.error}</div>}\n                  <TweetsList tweets={this.state.tweets} />\n                </div>\n              )}\n            </Route>\n            <Route path=\"/user\">\n              <nav>\n                <ul className=\"navbar\">\n                  <li className=\"navLi\">\n                    <Link to=\"/tweets\">Tweets</Link>\n                  </li>\n                  <li className=\"navLi\">\n                    <Link to=\"/user\">User</Link>\n                  </li>\n                  <li className=\"navLi\">\n                    <Link\n                      to=\"/\"\n                      onClick={() => {\n                        firebase.auth().signOut();\n                      }}\n                    >\n                      LogOut\n                    </Link>\n                  </li>\n                </ul>\n              </nav>\n              <User\n                onChangeUser={(name) => this.onChangeUser(name)}\n                username={this.state.userName}\n              />\n            </Route>\n            <Route path=\"/\">\n              <SignLogIn />\n            </Route>\n          </Switch>\n        </Router>\n      </MyContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}