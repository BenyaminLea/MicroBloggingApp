{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Lea/Desktop/ITC/Projects/react-project-2/react-project-2-BenyaminLea/src/App.js\";\nimport React from \"react\";\nimport AddTweetForm from \"./components/AddTweetForm\";\nimport TweetsList from \"./components/TweetsList\";\nimport localforage from \"localforage\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: []\n    };\n  }\n\n  componentDidMount() {\n    let list = [];\n    let revList = [];\n    localforage.iterate(function (value, key, iterationNumber) {\n      list.push(value);\n    }).then(() => {\n      for (var i = list.length - 1; i > -1; i--) {\n        revList.push(list[i]);\n      }\n\n      this.setState({\n        tweets: revList\n      });\n    }).catch(function (err) {\n      // This code runs if there were any errors\n      console.log(err);\n    });\n  }\n\n  handleOnAddTweet(newTweet) {\n    localforage.setItem(`${newTweet.dateCreated}`, newTweet).then(console.log(\" tweet saved\"));\n    this.setState(state => {\n      return {\n        tweets: [newTweet, ...state.tweets]\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(AddTweetForm, {\n        onAddTweet: newTweet => this.handleOnAddTweet(newTweet)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n        tweets: this.state.tweets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Lea/Desktop/ITC/Projects/react-project-2/react-project-2-BenyaminLea/src/App.js"],"names":["React","AddTweetForm","TweetsList","localforage","App","Component","constructor","props","state","tweets","componentDidMount","list","revList","iterate","value","key","iterationNumber","push","then","i","length","setState","catch","err","console","log","handleOnAddTweet","newTweet","setItem","dateCreated","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,aAAxB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,OAAO,GAAG,EAAd;AACAT,IAAAA,WAAW,CACRU,OADH,CACW,UAAUC,KAAV,EAAiBC,GAAjB,EAAsBC,eAAtB,EAAuC;AAC9CL,MAAAA,IAAI,CAACM,IAAL,CAAUH,KAAV;AACD,KAHH,EAIGI,IAJH,CAIQ,MAAM;AACV,WAAK,IAAIC,CAAC,GAAGR,IAAI,CAACS,MAAL,GAAc,CAA3B,EAA8BD,CAAC,GAAG,CAAC,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzCP,QAAAA,OAAO,CAACK,IAAR,CAAaN,IAAI,CAACQ,CAAD,CAAjB;AACD;;AACD,WAAKE,QAAL,CAAc;AAAEZ,QAAAA,MAAM,EAAEG;AAAV,OAAd;AACD,KATH,EAUGU,KAVH,CAUS,UAAUC,GAAV,EAAe;AACpB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAbH;AAcD;;AAEDG,EAAAA,gBAAgB,CAACC,QAAD,EAAW;AACzBxB,IAAAA,WAAW,CACRyB,OADH,CACY,GAAED,QAAQ,CAACE,WAAY,EADnC,EACsCF,QADtC,EAEGT,IAFH,CAEQM,OAAO,CAACC,GAAR,CAAY,cAAZ,CAFR;AAGA,SAAKJ,QAAL,CAAeb,KAAD,IAAW;AACvB,aAAO;AAAEC,QAAAA,MAAM,EAAE,CAACkB,QAAD,EAAW,GAAGnB,KAAK,CAACC,MAApB;AAAV,OAAP;AACD,KAFD;AAGD;;AAEDqB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,YAAD;AACE,QAAA,UAAU,EAAGH,QAAD,IAAc,KAAKD,gBAAL,CAAsBC,QAAtB;AAD5B;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAE,KAAKnB,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA7C+B;;AAgDlC,eAAeL,GAAf","sourcesContent":["import React from \"react\";\nimport AddTweetForm from \"./components/AddTweetForm\";\nimport TweetsList from \"./components/TweetsList\";\nimport localforage from \"localforage\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n    };\n  }\n\n  componentDidMount() {\n    let list = [];\n    let revList = [];\n    localforage\n      .iterate(function (value, key, iterationNumber) {\n        list.push(value);\n      })\n      .then(() => {\n        for (var i = list.length - 1; i > -1; i--) {\n          revList.push(list[i]);\n        }\n        this.setState({ tweets: revList });\n      })\n      .catch(function (err) {\n        // This code runs if there were any errors\n        console.log(err);\n      });\n  }\n\n  handleOnAddTweet(newTweet) {\n    localforage\n      .setItem(`${newTweet.dateCreated}`, newTweet)\n      .then(console.log(\" tweet saved\"));\n    this.setState((state) => {\n      return { tweets: [newTweet, ...state.tweets] };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <AddTweetForm\n          onAddTweet={(newTweet) => this.handleOnAddTweet(newTweet)}\n        />\n        <TweetsList tweets={this.state.tweets} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}